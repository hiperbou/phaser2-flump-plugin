{"version":3,"sources":["webpack://Flump/webpack/universalModuleDefinition","webpack://Flump/webpack/bootstrap","webpack://Flump/./src/constants/Constants.js","webpack://Flump/./src/index.js","webpack://Flump/./src/library/Library.js","webpack://Flump/./src/loader/AtlasLoader.js","webpack://Flump/./src/plugin/FlumpPlugin.js","webpack://Flump/./src/symbols/Symbol.js","webpack://Flump/./src/symbols/keyframe/KeyframeData.js","webpack://Flump/./src/symbols/layer/Layer.js","webpack://Flump/./src/symbols/layer/LayerData.js","webpack://Flump/./src/symbols/movie/Movie.js","webpack://Flump/./src/symbols/movie/MovieData.js"],"names":["EMPTY_KEYFRAME","EMPTY_LABEL","FIRST_FRAME","LAST_FRAME","EMPTY_SYMBOL_TYPE","MOVIE_SYMBOL_TYPE","IMAGE_SYMBOL_TYPE","STOPPED","PLAYING_CHILDREN_ONLY","PLAYING","NO_FRAME","Library","data","frameRate","undefined","Error","key","game","isDestroyed","imageAtlasMap","atlases","symbolPools","cache","checkJSONKey","getJSON","movies","movieMap","forEach","movie","i","id","MovieData","generateFrameData","unloadDependencies","destroy","length","shift","removeJSON","atlas","removeImage","getFreeSymbol","hasImageSymbol","hasMovieSymbol","type","symbolKey","symbol","restore","Movie","Symbol","loadTexture","setup","symbolType","symbolLibrary","indexOf","push","textureGroups","group","j","file","textures","imgKey","checkImageKey","frameData","Phaser","FrameData","texture","k","rect","addFrame","Frame","image","_cache","frame","getFrame","atlasLoader","libraryJson","textureUrls","overwrite","Array","isArray","url","extension","substring","lastIndexOf","addToFileList","Loader","prototype","flumpAtlas","FlumpPlugin","parent","flump","libraries","hasSymbol","create","library","Plugin","x","y","skew","Point","destroyChildren","position","set","pivot","scale","alpha","visible","calculateTransform","p","world","pt","worldTransform","wt","a","b","c","d","tx","ty","rotation","PIXI","PI_2","Math","cos","sin","worldAlpha","worldPosition","worldScale","sqrt","worldRotation","atan2","_currentBounds","transformCallback","call","transformCallbackContext","Image","KeyframeData","ref","skewX","json","index","duration","ease","tweened","label","loc","scaleX","scaleY","skewY","pivotX","pivotY","Layer","name","keyframes","frameCount","flipbook","currentSymbol","symbols","symbolCount","disabled","keyframeIdx","destSymbol","splice","cleanUp","lastSymbol","isFlipbook","createSymbolFrom","addChild","drawFrame","keyframe","setParentMovie","goToInternal","step","time","inverse","next","updateSymbol","removeChild","storeSymbol","LayerData","map","labels","layers","parentMovie","state","layerPool","framePosition","stopFrame","pendingGoToFrame","lastFrameIdx","playTime","skipAdvanceTime","isUpdatingFrame","fallbackLoop","playbackSpeed","labelEvents","Signal","playbackComplete","playbackLoop","dispose","layer","isManagedByParent","advanceTime","elapsedMS","getMovieData","getFrameOfLabel","restart","switchMovieTo","playTo","stopAt","play","recursive","nextFrame","updateFrame","toggle","children","child","childLayerIndex","replaceSymbol","replacement","addChildAt","replaceCurrentSymbol","goTo","getFreeLayer","layerData","dt","actualPlayTime","framesRemaining","framesElapsed","lastFrame","startFrame","count","num","frameIndex","dispatch","pending","loop","removeAll","max","fill","generateFrameLabels"],"mappings":"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","file":"phaser2-flump-plugin.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Flump\"] = factory();\n\telse\n\t\troot[\"Flump\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/**\r\n * Represents the name of an empty keyframe.\r\n * @type {string}\r\n * @version 1.0\r\n */\r\nexport const EMPTY_KEYFRAME = \"<Empty Keyframe>\";\r\n/**\r\n * String used for empty frame labels.\r\n * @type {string}\r\n * @version 1.0\r\n */\r\nexport const EMPTY_LABEL = \"\";\r\n\r\n/**\r\n * Frame label used to indicate the first frame of a Movie.\r\n * @type {string}\r\n * @version 1.0\r\n */\r\nexport const FIRST_FRAME = \"<First Frame>\";\r\n/**\r\n * Frame label used to indicate the last frame of a Movie.\r\n * @type {string}\r\n * @version 1.0\r\n */\r\nexport const LAST_FRAME = \"<Last Frame>\";\r\n\r\n/**\r\n * Name used to indicate an empty symbol type.\r\n * @type {string}\r\n * @version 1.0\r\n */\r\nexport const EMPTY_SYMBOL_TYPE = \"empty\";\r\n/**\r\n * Name used to indicate a Movie symbol type.\r\n * @type {string}\r\n * @version 1.0\r\n */\r\nexport const MOVIE_SYMBOL_TYPE = \"movie\";\r\n/**\r\n * Name used to indicate an Image symbol type.\r\n * @type {string}\r\n * @version 1.0\r\n */\r\nexport const IMAGE_SYMBOL_TYPE = \"image\";\r\n\r\n/**\r\n * The stopped Movie symbol state.\r\n * @type {string}\r\n * @version 1.0\r\n */\r\nexport const STOPPED = \"STOPPED\";\r\n/**\r\n * The playing children only Movie symbol state.\r\n * @type {string}\r\n * @version 1.0\r\n */\r\nexport const PLAYING_CHILDREN_ONLY = \"PLAYING_CHILDREN_ONLY\";\r\n/**\r\n * The playing Movie symbol state.\r\n * @type {string}\r\n * @version 1.0\r\n */\r\nexport const PLAYING = \"PLAYING\";\r\n\r\n/**\r\n * Placeholder frame index to indicate no frame.\r\n * @type {string}\r\n * @version 1.0\r\n */\r\nexport const NO_FRAME = -1;","export * from './loader/AtlasLoader';\r\nexport * from './plugin/FlumpPlugin';","import { Movie } from \"../symbols/movie/Movie\";\r\nimport { MovieData } from \"../symbols/movie/MovieData\";\r\nimport { \r\n    EMPTY_SYMBOL_TYPE, \r\n    IMAGE_SYMBOL_TYPE, \r\n    MOVIE_SYMBOL_TYPE \r\n} from \"../constants/Constants\";\r\nimport { Symbol } from \"../symbols/Symbol\";\r\n\r\n/**\r\n * Flump library manager that stores symbol information for creating Flump movies. Symbol data stored in this library\r\n * is unique to the loaded 'library.json' file. All symbol names within this library should be unique to avoid naming collisions.\r\n * \r\n * A library also pools Symbol objects that are not currently in use. When a new Movie symbol is requested from the library,\r\n * symbols will be pulled from the pools before new ones are created. When a Movie symbol is cleaned up, all of its symbols are\r\n * returned to the library and are stored for future use.\r\n * \r\n * When a library is destroyed, all stored symbols are also destroyed. Any attempt to store symbols after the library has been\r\n * destroyed will result in an error. Existing Movie symbols may still play after the library is destroyed, however changing \r\n * the animation in the Movie will result in the Movie attempting to access the library. It is best practice to only destroy \r\n * a library when you know it will not be needed, and destroying any symbols that may be living outside of the library \r\n * still in use.\r\n * \r\n * @version 1.0\r\n */\r\nexport class Library {\r\n    /**\r\n     * @type {number}\r\n     * @readonly\r\n     * @version 1.0\r\n     */\r\n    get frameRate() { \r\n        if (this.data.frameRate === undefined) {\r\n            throw new Error(`${this.key} is missing the 'frameRate' field in its library.json file.`);\r\n        }\r\n        return this.data.frameRate; \r\n    }\r\n\r\n    constructor(game, key) {\r\n        /**\r\n         * @type {Phaser.Game}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.game = game;\r\n\r\n        /**\r\n         * @type {string}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.key = key;\r\n\r\n        /**\r\n         * @type {boolean}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.isDestroyed = false;\r\n\r\n        /**\r\n         * A map of what symbol belongs to which atlas png.\r\n         * @type {Object.<string, string>}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.imageAtlasMap = {};\r\n\r\n        /**\r\n         * A list of atlas names for this library.\r\n         * @type {Array.<string>}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.atlases = []\r\n\r\n        /**\r\n         * Storage for unused symbols.\r\n         * @type {Object.<string, Array.<Symbol> | Object.<string, Array.<Symbol | Movie>>>}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.symbolPools = { \r\n            [EMPTY_SYMBOL_TYPE]: [], // Symbols with no loaded textures.\r\n            [IMAGE_SYMBOL_TYPE]: [], // Symbols with loaded textures.\r\n            [MOVIE_SYMBOL_TYPE]: []  // Symbols used for playing Movies.\r\n        };\r\n\r\n        // Verify the library.json file for this library has been loaded to cache.\r\n        if (!this.game.cache.checkJSONKey(key)) {\r\n            throw new Error(`Cannot find library JSON for ${key} in game cache.`);\r\n        }\r\n\r\n        /** \r\n         * @type {Object.<string, any}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.data = this.game.cache.getJSON(key);\r\n\r\n        // Verify the movies list exits in the library's data.\r\n        if (this.data.movies === undefined) {\r\n            throw new Error(`Library data for ${this.key} is missing the 'movies' field.`);\r\n        }\r\n\r\n        /**\r\n         * @type {Object.<string, MovieData}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.movieMap = {};\r\n        this.data.movies.forEach((movie, i) => {\r\n            if (movie.id === undefined) {\r\n                throw new Error(`Movie ${i} in ${this.key} is missing the id field.`);\r\n            }\r\n            this.movieMap[movie.id] = new MovieData(this.key, movie);\r\n        });\r\n\r\n        // Generate the frame data for each texture symbol in this library.\r\n        this.generateFrameData();\r\n    }\r\n\r\n    /**\r\n     * Destroys and cleans up this library\r\n     * @param {boolean} unloadDependencies\r\n     * @version 1.0\r\n     */\r\n    destroy(unloadDependencies = false) {\r\n        if (this.isDestroyed) {\r\n            // Ideally we will never get here, however throw an error in case the user tries to use the library after it was removed from the plugin.\r\n            throw new Error(`${this.key} has already been destroyed.`);\r\n        }\r\n\r\n        // Clean up MovieData objects.\r\n        for (let key in this.movieMap) {\r\n            this.movieMap[key].destroy();\r\n        }\r\n        this.movieMap = undefined;\r\n\r\n        // Clean up the pooled library symbols\r\n        while (this.symbolPools[EMPTY_SYMBOL_TYPE].length > 0) {\r\n            this.symbolPools[EMPTY_SYMBOL_TYPE].shift().destroy();\r\n        }\r\n        while (this.symbolPools[IMAGE_SYMBOL_TYPE].length > 0) {\r\n            this.symbolPools[IMAGE_SYMBOL_TYPE].shift().destroy();\r\n        }\r\n        while (this.symbolPools[MOVIE_SYMBOL_TYPE].length > 0) {\r\n            this.symbolPools[MOVIE_SYMBOL_TYPE].shift().destroy();\r\n        }\r\n        this.symbolPools = undefined\r\n\r\n        // If specified, unload cached library dependencies.\r\n        if (unloadDependencies) {\r\n            this.game.cache.removeJSON(this.key);\r\n            this.atlases.forEach(atlas => this.game.cache.removeImage(atlas, true));\r\n        }\r\n\r\n        // Clean up references.\r\n        this.game = undefined;\r\n        this.data = undefined;\r\n        this.imageAtlasMap = undefined;\r\n    }\r\n\r\n    /**\r\n     * Creates either a Movie or Image symbol from this library.\r\n     * @param {string} key Symbol key\r\n     * @return {Movie | Symbol}\r\n     * @version 1.0\r\n     */\r\n    create(key) {\r\n        if (key === undefined) {\r\n            return this.getFreeSymbol(EMPTY_SYMBOL_TYPE);\r\n        }\r\n        else if (this.imageAtlasMap[key] !== undefined) {\r\n            return this.getFreeSymbol(IMAGE_SYMBOL_TYPE, key);\r\n        }\r\n        else if (this.movieMap[key] !== undefined) {\r\n            return this.getFreeSymbol(MOVIE_SYMBOL_TYPE, key);\r\n        }\r\n        throw new Error(`Cannot find symbol ${key} in ${this.key}.`);\r\n    }\r\n\r\n    /**\r\n     * Check to see if this library contains a symbol for the provided key.\r\n     * @param {string} key \r\n     * @version 1.0\r\n     */\r\n    hasSymbol(key) {\r\n        if (this.isDestroyed) {\r\n            // Ideally we will never get here, however throw an error in case the user tries to use the library after it was removed from the plugin.\r\n            throw new Error(`${this.key} has been destroyed and has no symbols.`);\r\n        }\r\n        return this.hasImageSymbol(key) || this.hasMovieSymbol(key);\r\n    }\r\n\r\n    /**\r\n     * Check to see if this library contains the provided Movie key.\r\n     * @param {string} key \r\n     * @version 1.0\r\n     */\r\n    hasMovieSymbol(key) {\r\n        if (this.isDestroyed) {\r\n            // Ideally we will never get here, however throw an error in case the user tries to use the library after it was removed from the plugin.\r\n            throw new Error(`${this.key} has been destroyed and has no symbols.`);\r\n        }\r\n        return this.movieMap[key] !== undefined;\r\n    }\r\n\r\n    /**\r\n     * Check to see if this library contains the provided Image key.\r\n     * @param {string} key \r\n     * @version 1.0\r\n     */\r\n    hasImageSymbol(key) {\r\n        if (this.isDestroyed) {\r\n            // Ideally we will never get here, however throw an error in case the user tries to use the library after it was removed from the plugin.\r\n            throw new Error(`${this.key} has been destroyed and has no symbols.`);\r\n        }\r\n        return this.imageAtlasMap[key] !== undefined;\r\n    }\r\n\r\n    /**\r\n     * Returns the MovieData object for the provided Movie key.\r\n     * @param {string} key \r\n     * @version 1.0\r\n     */\r\n    getMovieData(key) {\r\n        if (!this.hasMovieSymbol(key)) {\r\n            throw new Error(`${this.key} does not contain MovieData for ${key}.`);\r\n        }\r\n        return this.movieMap[key];\r\n    }\r\n\r\n    /**\r\n     * Returns a free symbol from a pool, or creates a new library symbol.\r\n     * @param {string} type \r\n     * @param {string} key \r\n     * @version 1.0\r\n     */\r\n    getFreeSymbol(type, key) {\r\n        if (this.isDestroyed) {\r\n            // Ideally we will never get here, however throw an error in case the user tries to use the library after it was removed from the plugin.\r\n            throw new Error(`${this.key} has been destroyed and has no symbols.`);\r\n        }\r\n\r\n        if (type !== EMPTY_SYMBOL_TYPE && type !== IMAGE_SYMBOL_TYPE && type !== MOVIE_SYMBOL_TYPE) {\r\n            throw new Error(`Cannot get the symbol ${key} in ${this.key}.`);\r\n        }\r\n\r\n        const symbolKey = key || EMPTY_SYMBOL_TYPE;\r\n        let symbol;\r\n\r\n        this.symbolPools[type] = this.symbolPools[type] || [];\r\n        if (this.symbolPools[type].length > 0) {\r\n            // Pull a symbol from a pool and restore it for reuse.\r\n            symbol = this.symbolPools[type].shift().restore();\r\n        }\r\n        else {\r\n            // No available symbols in the pools, so now we allocate a new symbol.\r\n            if (type === MOVIE_SYMBOL_TYPE) {\r\n                symbol = new Movie(this.game, this.frameRate); // Allocation\r\n            }\r\n            else {\r\n                symbol = new Symbol(this.game); // Allocation\r\n            }\r\n        }\r\n\r\n        if (type === IMAGE_SYMBOL_TYPE) {\r\n            // Load the image data into this symbol.\r\n            symbol.loadTexture(this.imageAtlasMap[key], key);\r\n        }\r\n        else if (type === MOVIE_SYMBOL_TYPE) {\r\n            // Set this movie up with the movie data.\r\n            symbol.setup(this.movieMap[key])\r\n        }\r\n\r\n        symbol.symbolType = type;\r\n        symbol.symbolKey = symbolKey;\r\n        symbol.symbolLibrary = this.key;\r\n\r\n        // Return the symbol.\r\n        return symbol;\r\n    }\r\n\r\n    /**\r\n     * Store the provided symbol in this library.\r\n     * Only symbols created from this library using the Library.create() function can be store in this library.\r\n     * @param {Symbol | Movie} symbol \r\n     * @version 1.0 - Added\r\n     */\r\n    storeSymbol(symbol) {\r\n        if (this.isDestroyed) {\r\n            // Ideally we will never get here, however throw an error in case the user tries to use the library after it was removed from the plugin.\r\n            throw new Error(`${this.key} has been destroyed and no longer can store symbols. Use Symbol.destroy() instead.`);\r\n        }\r\n\r\n        if (symbol.symbolLibrary === undefined || symbol.symbolLibrary !== this.key) {\r\n            throw new Error(\"The provided symbol does not belong to this library.\");\r\n        }\r\n\r\n        if (symbol.symbolType !== EMPTY_SYMBOL_TYPE && symbol.symbolType !== IMAGE_SYMBOL_TYPE && symbol.symbolType !== MOVIE_SYMBOL_TYPE) {\r\n            throw new Error(`Cannot store the symbol ${symbol.symbolKey} in ${this.key}.`);\r\n        }\r\n        \r\n        if (this.symbolPools[symbol.symbolType].indexOf(symbol) >= 0) {\r\n            throw new Error(\"Attempting to store a symbol that is already in storage. Symbols in storages should not be referenced.\");\r\n        }\r\n\r\n        this.symbolPools[symbol.symbolType].push(symbol);\r\n    }\r\n\r\n    /**\r\n     * Generates the frame data for the loaded library atlas pngs and updates the cached image data.\r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    generateFrameData() {\r\n        if (this.isDestroyed) {\r\n            return;\r\n        }\r\n\r\n        const textureGroups = this.data.textureGroups;\r\n        if (textureGroups === undefined) {\r\n            throw new Error(`Library JSON for ${this.key} is missing the 'textureGroups' field (Array).`);\r\n        }\r\n\r\n        // Begin generating frame data for each texture group.\r\n        textureGroups.forEach((group, i) => {\r\n            if (group.atlases === undefined) {\r\n                throw new Error(`Texture group ${i} for ${this.key} is missing the 'atlases' field (Array).`);\r\n            }\r\n\r\n            group.atlases.forEach((atlas, j) => {\r\n                if (atlas.file === undefined) {\r\n                    throw new Error(`Atlas ${j} in texture group ${i} for ${this.key} is missing the 'file' field (string).`);\r\n                }\r\n                if (atlas.textures === undefined) {\r\n                    throw new Error(`Atlas ${j} in texture group ${i} for ${this.key} is missing the 'textures' field (Array).`);\r\n                }\r\n\r\n                const imgKey = `${this.key}/${atlas.file}`;\r\n                // Verify the atlas png has been loaded.\r\n                if (!this.game.cache.checkImageKey(imgKey)) {\r\n                    throw new Error(`Cannot find image ${imgKey} in game cache.`);\r\n                }\r\n\r\n                // Add this atlas key to the library's atlas list.\r\n                this.atlases.push(imgKey);\r\n\r\n                const frameData = new Phaser.FrameData();\r\n                atlas.textures.forEach((texture, k) => {\r\n                    if (texture.symbol === undefined) {\r\n                        throw new Error(`Texture ${k} on atlas ${j} in texture group ${i} for ${this.key} is missing the 'symbol' field (string).`);\r\n                    }\r\n                    if (texture.rect === undefined) {\r\n                        throw new Error(`Texture ${k} on atlas ${j} in texture group ${i} for ${this.key} is missing the 'rect' field (Array).`);\r\n                    }\r\n                    frameData.addFrame(new Phaser.Frame(k, texture.rect[0], texture.rect[1], texture.rect[2], texture.rect[3], texture.symbol));\r\n\r\n                    // Set a reference to which atlas this texture symbol is in.\r\n                    this.imageAtlasMap[texture.symbol] = imgKey;\r\n                });\r\n\r\n                // Replace the current frame data on the loaded atlas image with the frame data from the library's json data.\r\n                const image = this.game.cache._cache.image[imgKey];\r\n                image.frameData = frameData;\r\n                image.frame = frameData.getFrame(0);\r\n            });\r\n        });\r\n    }\r\n}","/**\r\n * Adds library assets to the file list.\r\n * @param {string} key \r\n * @param {string} libraryJson \r\n * @param {string | Array.<string>} textureUrls \r\n * @param {boolean} overwrite \r\n * @version 1.0\r\n */\r\nexport function atlasLoader(key, libraryJson, textureUrls, overwrite) {\r\n    textureUrls = textureUrls || [];\r\n    if (!Array.isArray(textureUrls)) {\r\n        textureUrls = [textureUrls];\r\n    }\r\n    textureUrls.forEach(url => {\r\n        const extension = url.substring(url.lastIndexOf(\".\"));\r\n        const file = url.substring(url.lastIndexOf(\"/\") + 1);\r\n        this.addToFileList(\"image\", `${key}/${file}`, url, undefined, overwrite, extension);\r\n    });\r\n    this.addToFileList(\"json\", key, libraryJson, undefined, overwrite, \".json\");\r\n    return this;\r\n}\r\n\r\n// Inject the Flump atlas loader in to the Phaser.Loader.\r\nPhaser.Loader.prototype.flumpAtlas = atlasLoader;","import { Library } from \"../library/Library\";\r\n\r\n/**\r\n * Phaser 2 plugin used to play Flump animations. This plugin store Flump libraries which can be loaded\r\n * using Phaser 2's load manager. Simply call `game.load.flumpAtlas(libraryKey, libraryJson, atlasPNGs)` in the \r\n * preload function of any state. After library assets are loaded, call `game.flump.addLibrary(libraryKey)` to\r\n * begin using Flump animations within Phaser 2. Create symbols by calling `game.flump.createSymbol(symbolKey)`\r\n * or `game.flump.createSymbolFrom(libraryKey, symbolKey)`. Remove a library from the plugin by calling\r\n * `game.flump.removeLibrary(libraryKey)`.\r\n * \r\n * Please note that removing a library from the plugin will result in that library being destroyed. \r\n * Once a library is destroyed it should be consider unusable. Any symbols created from a destroyed library \r\n * should also be considered unusable and should be destroyed as well.\r\n * \r\n * @version 1.0\r\n */\r\nexport class FlumpPlugin extends Phaser.Plugin {\r\n    constructor(game, parent) {\r\n        super(game, parent);\r\n\r\n        /** \r\n         * @type {Phaser.Game} \r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.game.flump = this.game.flump || this;\r\n\r\n        /** \r\n         * @type {Object.<string, Library>} \r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.libraries = {};\r\n    }\r\n\r\n    /**\r\n     * Adds a library to the Flump plugin. \r\n     * All library dependencies must be loaded to cache before adding a library\r\n     * @param {string} key Library key\r\n     * @version 1.0\r\n     */\r\n    addLibrary(key) {\r\n        if (this.libraries[key] !== undefined) {\r\n            throw new Error(`Flump library ${key} already exists.`);\r\n        }\r\n        this.libraries[key] = new Library(this.game, key);\r\n    }\r\n\r\n    /**\r\n     * Removes a library from the Flump plugin.\r\n     * This destroys the library. All Movies and Image symbols related to this library should be considered unusable after\r\n     * the library is removed from the plugin. It is good practice to clean up any references to Movies or Image symbols\r\n     * before removing the library it is from.\r\n     * @param {string} key Library key\r\n     * @version 1.0\r\n     */\r\n    removeLibrary(key) {\r\n        if (this.libraries[key] !== undefined) {\r\n            this.libraries[key].destroy();\r\n            delete this.libraries[key];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check to see if the plugin has a Flump library for the provided key.\r\n     * @param {string} key \r\n     * @version 1.0\r\n     */\r\n    hasLibrary(key) {\r\n        return this.libraries[key] !== undefined;\r\n    }\r\n\r\n    /**\r\n     * Searches all libraries for the first instance of the symbol and returns an instance of it.\r\n     * @param {string} key Symbol key to search for.\r\n     * @version 1.0\r\n     */\r\n    createSymbol(key) {\r\n        // Search for a library that contains a symbol for the provided key.\r\n        for (let i in this.libraries) {\r\n            if (this.libraries[i].hasSymbol(key)) {\r\n                return this.libraries[i].create(key);\r\n            }\r\n        }\r\n        throw new Error(`Cannot find a library that contains a symbol for '${key}'.`);\r\n    }\r\n\r\n    /**\r\n     * Creates a new symbol from the specified library.\r\n     * Passing in 'undefined' for the symbol key will return an empty image symbol from the library.\r\n     * @param {string} library Library key\r\n     * @param {string} key Symbol key\r\n     * @version 1.0\r\n     */\r\n    createSymbolFrom(library, key) {\r\n        if (this.libraries[library] === undefined) {\r\n            throw new Error(`Flump library ${library} does not exist. Be sure to call 'game.flump.addLibrary(\"${library}\")' before attempting to create a symbol.`);\r\n        }\r\n        return this.libraries[library].create(key);\r\n    }\r\n}","import { MOVIE_SYMBOL_TYPE, IMAGE_SYMBOL_TYPE } from \"../constants/Constants\";\r\n\r\n/**\r\n * Flump symbol. This is the base symbol class for the Flump plugin. It's used to store some symbol specific\r\n * information that will allow the plugin to know how to manage this symbol. It's also used to implement\r\n * the ability to skew a `Phaser.Image` object. Its used as a generic image symbol and is extended by\r\n * `Movie`. \r\n * \r\n * @version 1.0\r\n */\r\nexport class Symbol extends Phaser.Image {\r\n    constructor(game, x, y, key, frame) {\r\n        super(game, x, y, key, frame);\r\n        /**\r\n         * @type {string}\r\n         * @version 1.0\r\n         */\r\n        this.symbolType = undefined;\r\n        /**\r\n         * @type {string}\r\n         * @version 1.0\r\n         */\r\n        this.symbolKey = undefined;\r\n        /**\r\n         * @type {string}\r\n         * @version 1.0\r\n         */\r\n        this.symbolLibrary = undefined;\r\n        /**\r\n         * @type {Phaser.Point}\r\n         * @version 1.0\r\n         */\r\n        this.skew = new Phaser.Point(0, 0);\r\n    }\r\n\r\n    /**\r\n     * Destroys this symbol object\r\n     * @param {boolean} destroyChildren \r\n     * @version 1.0\r\n     */\r\n    destroy(destroyChildren) {\r\n        this.skew = undefined;\r\n        super.destroy(destroyChildren);\r\n    }\r\n\r\n    /**\r\n     * Restores the Symbol to its default state.\r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    restore() {\r\n        this.position.set(0, 0);\r\n        this.pivot.set(0, 0);\r\n        this.skew.set(0, 0);\r\n        this.scale.set(1, 1);\r\n        this.alpha = 1;\r\n        this.visible = true;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Phaser 2's alias for `PIXI.DisplayObject.updateTransform`.\r\n     * @param {PIXI.DisplayObject} parent \r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    displayObjectUpdateTransform(parent) {\r\n        if (this.symbolType === MOVIE_SYMBOL_TYPE) {\r\n            return this.calculateTransform(parent);\r\n        }\r\n        return super.displayObjectUpdateTransform(parent);\r\n    }\r\n\r\n    /**\r\n     * Phaser 2's overriden version of `PIXI.DisplayObject.updateTransform`.\r\n     * @param {PIXI.DisplayObject} parent \r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    updateTransform(parent) {\r\n        if (this.symbolType === IMAGE_SYMBOL_TYPE) {\r\n            return this.calculateTransform(parent);\r\n        }\r\n        return super.updateTransform(parent);\r\n    }\r\n\r\n    /**\r\n     * Calculates the rendering position, scale, rotation and alpha for this symbol.\r\n     * @param {PIXI.DisplayObject} parent \r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    calculateTransform(parent) {\r\n        if (!parent && !this.parent && !this.game) {\r\n            return this;\r\n        }\r\n\r\n        let p = this.parent;\r\n\r\n        if (parent) {\r\n            p = parent;\r\n        }\r\n        else if (!this.parent) {\r\n            p = this.game.world;\r\n        }\r\n\r\n        // create some matrix refs for easy access\r\n        const pt = p.worldTransform;\r\n        const wt = this.worldTransform;\r\n\r\n        // temporary matrix variables\r\n        let a, b, c, d, tx, ty;\r\n\r\n        // so if rotation is between 0 then we can simplify the multiplication process..\r\n        if (this.rotation % PIXI.PI_2 || this.skew.x || this.skew.y) {\r\n\r\n            // get the matrix values of the displayobject based on its transform properties..\r\n            a  =  this.scale.x * Math.cos(this.rotation + this.skew.y);\r\n            b  =  this.scale.x * Math.sin(this.rotation + this.skew.y);\r\n            c  =  this.scale.y * Math.sin(-this.rotation - this.skew.x);\r\n            d  =  this.scale.y * Math.cos(this.rotation + this.skew.x);\r\n            tx =  this.position.x;\r\n            ty =  this.position.y;\r\n            \r\n            // check for pivot.. not often used so geared towards that fact!\r\n            if (this.pivot.x || this.pivot.y)\r\n            {\r\n                tx -= this.pivot.x * a + this.pivot.y * c;\r\n                ty -= this.pivot.x * b + this.pivot.y * d;\r\n            }\r\n\r\n            // concat the parent matrix with the objects transform.\r\n            wt.a  = a  * pt.a + b  * pt.c;\r\n            wt.b  = a  * pt.b + b  * pt.d;\r\n            wt.c  = c  * pt.a + d  * pt.c;\r\n            wt.d  = c  * pt.b + d  * pt.d;\r\n            wt.tx = tx * pt.a + ty * pt.c + pt.tx;\r\n            wt.ty = tx * pt.b + ty * pt.d + pt.ty;\r\n        }\r\n        else {\r\n            // lets do the fast version as we know there is no rotation..\r\n            a  = this.scale.x;\r\n            d  = this.scale.y;\r\n\r\n            tx = this.position.x - this.pivot.x * a;\r\n            ty = this.position.y - this.pivot.y * d;\r\n\r\n            wt.a  = a  * pt.a;\r\n            wt.b  = a  * pt.b;\r\n            wt.c  = d  * pt.c;\r\n            wt.d  = d  * pt.d;\r\n            wt.tx = tx * pt.a + ty * pt.c + pt.tx;\r\n            wt.ty = tx * pt.b + ty * pt.d + pt.ty;\r\n        }\r\n\r\n        // multiply the alphas..\r\n        /** @ignore */\r\n        this.worldAlpha = this.alpha * p.worldAlpha;\r\n\r\n        this.worldPosition.set(wt.tx, wt.ty);\r\n        this.worldScale.set(Math.sqrt(wt.a * wt.a + wt.b * wt.b), Math.sqrt(wt.c * wt.c + wt.d * wt.d));\r\n        /** @ignore */\r\n        this.worldRotation = Math.atan2(-wt.c, wt.d);\r\n\r\n        // reset the bounds each time this is called!\r\n        this._currentBounds = null;\r\n\r\n        //  Custom callback?\r\n        if (this.transformCallback) {\r\n            this.transformCallback.call(this.transformCallbackContext, wt, pt);\r\n        } \r\n\r\n        return this;\r\n    }\r\n}","import { \r\n    EMPTY_KEYFRAME, \r\n    EMPTY_LABEL \r\n} from \"../../constants/Constants\";\r\n\r\n/**\r\n * Symbol state information for an individual keyframe of an animation.\r\n * \r\n * @version 1.0\r\n */\r\nexport class KeyframeData {\r\n    get isEmpty() { return this.ref === EMPTY_KEYFRAME; }\r\n    get rotation() { return this.skewX; }\r\n\r\n    constructor(json) {\r\n        if (json.index === undefined) {\r\n            throw new Error(\"Keyframe is missing index field.\");\r\n        }\r\n        /**\r\n         * @type {string}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.index = json.index;\r\n\r\n        if (json.duration === undefined) {\r\n            throw new Error(\"Keyframe is missing duration field\");\r\n        }\r\n        /**\r\n         * @type {number}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.duration = json.duration;\r\n\r\n        /**\r\n         * @type {string}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.ref = json.ref === undefined ? EMPTY_KEYFRAME : json.ref;\r\n        /**\r\n         * @type {number}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.alpha = json.alpha === undefined ? 1 : json.alpha;\r\n        /**\r\n         * @type {boolean}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.visible = json.visible === undefined ? true : json.visible;\r\n        /**\r\n         * @type {number}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.ease = json.ease === undefined ? 0 : json.ease;\r\n        /**\r\n         * @type {boolean}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.tweened = json.tweened === undefined ? true : json.tweened;\r\n        /**\r\n         * @type {string}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.label = json.label === undefined ? EMPTY_LABEL : json.label;\r\n\r\n        const loc = json.loc === undefined ? [0, 0] : json.loc;\r\n        /**\r\n         * @type {number}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.x = loc[0];\r\n        /**\r\n         * @type {number}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.y = loc[1];\r\n\r\n        const scale = json.scale === undefined ? [1, 1] : json.scale;\r\n        /**\r\n         * @type {number}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.scaleX = scale[0];\r\n        /**\r\n         * @type {number}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.scaleY = scale[1];\r\n\r\n        const skew = json.skew === undefined ? [0, 0] : json.skew;\r\n        /**\r\n         * @type {number}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.skewX = skew[0];\r\n        /**\r\n         * @type {number}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.skewY = skew[1];\r\n\r\n        const pivot = json.pivot === undefined ? [0, 0] : json.pivot;\r\n        /**\r\n         * @type {number}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.pivotX = pivot[0];\r\n        /**\r\n         * @type {number}\r\n         * @readonly\r\n         * @version 1.0\r\n         */\r\n        this.pivotY = pivot[1];\r\n    }\r\n}","import { Movie } from \"../movie/Movie\";\r\nimport { LayerData } from \"./LayerData\";\r\nimport { KeyframeData } from \"../keyframe/KeyframeData\";\r\nimport { EMPTY_KEYFRAME, MOVIE_SYMBOL_TYPE } from \"../../constants/Constants\";\r\nimport { Symbol } from \"../Symbol\";\r\n\r\n/**\r\n * Flump layer manager used to setup and manage symbols across multiple keyframes of an animation. A layer is\r\n * responsible for add/removing symbols from its parent Movie symbol, and updating the current symbol to\r\n * reflect the state of the animation timeline.\r\n * \r\n * Layers are only responsible for updating one symbol at a time. When a new keyframe is hit or passed, the layer\r\n * will update which symbol it is managing. Layer order is determined by the parent Movie symbol.\r\n * \r\n * Layers are pooled when the parent Movie symbol changes its animation. This means that a single layer can be\r\n * reused with and given new layer data.\r\n * \r\n * Layers should be considered internal helper objects to a Movie symbol and it is not recommended to access a layer\r\n * outside of the Movie symbol.\r\n * \r\n * @version 1.0\r\n */\r\nexport class Layer {\r\n    /**\r\n     * @type {string}\r\n     * @readonly\r\n     * @version 1.0\r\n     */\r\n    get name() { return this.data.name; }\r\n    /**\r\n     * @type {string}\r\n     * @readonly\r\n     * @version 1.0\r\n     */\r\n    get library() { return this.data.library; }\r\n    /**\r\n     * @type {Array.<KeyframeData>}\r\n     * @readonly\r\n     * @version 1.0\r\n     */\r\n    get keyframes() { return this.data.keyframes; }\r\n    /**\r\n     * @type {number}\r\n     * @readonly\r\n     * @version 1.0\r\n     */\r\n    get frameCount() { return this.data.frameCount; }\r\n    /**\r\n     * @type {boolean}\r\n     * @readonly\r\n     * @version 1.0\r\n     */\r\n    get isFlipbook() { return this.data.flipbook; }\r\n\r\n    constructor(movie) {\r\n        /**\r\n         * @type {Movie}\r\n         * @version 1.0\r\n         */\r\n        this.movie = movie;\r\n        \r\n        /**\r\n         * @type {Phaser.Game}\r\n         * @version 1.0\r\n         */\r\n        this.game = movie.game;\r\n        \r\n        /**\r\n         * @type {LayerData}\r\n         * @version 1.0\r\n         */\r\n        this.data = undefined;\r\n\r\n        /**\r\n         * @type {Movie | Symbol}\r\n         * @version 1.0\r\n         */\r\n        this.currentSymbol = undefined;\r\n\r\n        /**\r\n         * @type {Array.<Symbol | Movie}\r\n         * @version 1.0\r\n         */\r\n        this.symbols = [];\r\n\r\n        /**\r\n         * @type {number}\r\n         * @version 1.0\r\n         */\r\n        this.symbolCount = 0;\r\n\r\n        /**\r\n         * @type {boolean}\r\n         * @version 1.0\r\n         */\r\n        this.disabled = false;\r\n\r\n        /**\r\n         * @type {number}\r\n         * @version 1.0\r\n         */\r\n        this.keyframeIdx = 0;\r\n    }\r\n\r\n    /**\r\n     * Destroyings the layer and all its symbols.\r\n     * @version 1.0\r\n     */\r\n    destroy() {\r\n        this.movie = undefined;\r\n        this.game = undefined;\r\n        this.data = undefined;\r\n        this.currentSymbol = undefined;\r\n\r\n        // Destroy each unique symbol reference, while skipping duplicate references.\r\n        while (this.symbols.length > 0) {\r\n            const destSymbol = this.symbols.shift();\r\n            for (let i = this.symbols.length - 1; i >= 0; i--) {\r\n                if (this.symbols[i] === destSymbol) {\r\n                    this.symbols.splice(i, 1);\r\n                }\r\n            }\r\n            destSymbol.destroy();\r\n        }\r\n        this.symbols = undefined;\r\n    }\r\n\r\n    /**\r\n     * Used to setup this layer with the provided data.\r\n     * Reused this to assign new data to this layer. If used to\r\n     * reassign layer data, then previous layer data will be cleaned up.\r\n     * @param {LayerData} data \r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    setup(data) {\r\n        if (this.data !== undefined) {\r\n            this.cleanUp();\r\n        }\r\n\r\n        this.data = data;\r\n        this.symbolCount = 0;\r\n\r\n        let lastSymbol = EMPTY_KEYFRAME;\r\n        for (let i = 0; i < this.keyframes.length && lastSymbol === EMPTY_KEYFRAME; i++) {\r\n            lastSymbol = this.keyframes[i].ref;\r\n        }\r\n\r\n        if (!this.isFlipbook && lastSymbol === EMPTY_KEYFRAME) {\r\n            this.currentSymbol = this.game.flump.createSymbolFrom(this.library);\r\n            this.movie.addChild(this.currentSymbol);\r\n            this.symbolCount = 1;\r\n            \r\n            return this.drawFrame(0);\r\n        }\r\n\r\n        for (let i = 0; i < this.keyframes.length; ++i) {\r\n            const keyframe = this.keyframes[i];\r\n\r\n            let symbol;\r\n            if (i > 0 && this.keyframes[i - 1].ref === keyframe.ref) {\r\n                symbol = this.symbols[i - 1];\r\n            }\r\n            else {\r\n                this.symbolCount++;\r\n\r\n                if (keyframe.ref === EMPTY_KEYFRAME) {\r\n                    symbol = this.game.flump.createSymbolFrom(this.library);\r\n                }\r\n                else {\r\n                    symbol = this.game.flump.createSymbolFrom(this.library, keyframe.ref);\r\n                    if (symbol.symbolType === MOVIE_SYMBOL_TYPE) {\r\n                        symbol.setParentMovie(this.movie);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.symbols.push(symbol);\r\n            symbol.visible = false;\r\n            this.movie.addChild(symbol);\r\n        }\r\n\r\n        this.currentSymbol = this.symbols[0];\r\n        this.currentSymbol.visible = true;\r\n\r\n        return this.drawFrame(0);\r\n    }\r\n\r\n    /**\r\n     * Used internally to replace this layer's current symbol.\r\n     * All references to the current symbol on additional keyframes will also be replaces.\r\n     * @param {Symbol | Movie} symbol\r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    replaceCurrentSymbol(symbol) {\r\n        for (let i = 0; i < this.symbols.length; i++) {\r\n            if (this.symbols[i] === this.currentSymbol) {\r\n                this.symbols[i] = symbol;\r\n            }\r\n        }\r\n        this.currentSymbol = symbol;\r\n    }\r\n\r\n    /**\r\n     * Draw the layer at the provided frame position.\r\n     * @param {number} frame \r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    drawFrame(frame) {\r\n        if (!this.symbols || this.symbols.length === 0 || this.disabled) {\r\n            return this;\r\n        }\r\n        else if (frame >= this.frameCount) {\r\n            this.currentSymbol.visible = false;\r\n            this.keyframeIdx = this.keyframes.length - 1;\r\n            return this;\r\n        }\r\n\r\n        if (this.keyframes[this.keyframeIdx].index > frame) {\r\n            this.keyframeIdx = 0;\r\n        }\r\n\r\n        while (this.keyframeIdx < this.keyframes.length - 1 && this.keyframes[this.keyframeIdx + 1].index <= frame) {\r\n            this.keyframeIdx++;\r\n        }\r\n\r\n        const symbol = this.symbols[this.keyframeIdx];\r\n        if (this.currentSymbol !== symbol) {;\r\n            this.currentSymbol.visible = false;\r\n\r\n            if (symbol.symbolType === MOVIE_SYMBOL_TYPE) {\r\n                symbol.goToInternal(0, true);\r\n            }\r\n\r\n            this.currentSymbol = symbol;\r\n        }\r\n\r\n        const keyframe = this.keyframes[this.keyframeIdx];\r\n        let x = keyframe.x;\r\n        let y = keyframe.y;\r\n        let pivotX = keyframe.pivotX;\r\n        let pivotY = keyframe.pivotY;\r\n        let scaleX = keyframe.scaleX;\r\n        let scaleY = keyframe.scaleY;\r\n        let skewX = keyframe.skewX;\r\n        let skewY = keyframe.skewY;\r\n        let alpha = keyframe.alpha;\r\n        \r\n        this.currentSymbol.visible = keyframe.visible;\r\n\r\n        if (this.keyframeIdx < this.keyframes.length - 1 && keyframe.index !== frame && keyframe.tweened) {\r\n            let step = (frame - keyframe.index) / keyframe.duration;\r\n            let ease = keyframe.ease;\r\n\r\n            if (ease !== 0) {\r\n                let time;\r\n\r\n                if (ease < 0) {\r\n                    const inverse = 1 - step;\r\n                    time = 1 - inverse * inverse;\r\n                    ease = -ease;\r\n                }\r\n                else {\r\n                    time = step * step;\r\n                }\r\n\r\n                step = ease * time + (1 - ease) * step;\r\n            }\r\n\r\n            const next = this.keyframes[this.keyframeIdx + 1];\r\n            x += (next.x - x) * step;\r\n            y += (next.y - y) * step;\r\n            pivotX += (next.pivotX - pivotX) * step;\r\n            pivotY += (next.pivotY - pivotY) * step;\r\n            scaleX += (next.scaleX - scaleX) * step;\r\n            scaleY += (next.scaleY - scaleY) * step;\r\n            skewX += (next.skewX - skewX) * step;\r\n            skewY += (next.skewY - skewY) * step;\r\n            alpha += (next.alpha - alpha) * step;\r\n        }\r\n\r\n        this.updateSymbol(x, y, pivotX, pivotY, scaleX, scaleY, skewX, skewY, alpha);\r\n        \r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used internally to update the layer's current symbol.\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @param {number} pivotX \r\n     * @param {number} pivotY \r\n     * @param {number} scaleX \r\n     * @param {number} scaleY \r\n     * @param {number} skewX \r\n     * @param {number} skewY \r\n     * @param {number} alpha \r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    updateSymbol(x, y, pivotX, pivotY, scaleX, scaleY, skewX, skewY, alpha) {\r\n        if (this.currentSymbol.visible) {\r\n            this.currentSymbol.position.set(x, y);\r\n            this.currentSymbol.pivot.set(pivotX, pivotY);\r\n            this.currentSymbol.skew.set(skewX, skewY);\r\n            this.currentSymbol.scale.set(scaleX, scaleY);\r\n            this.currentSymbol.alpha = alpha;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used internally to clean up all symbols this layer manages.\r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    cleanUp() {\r\n        // Push current symbol into the list to make sure it gets properly cleaned up with everything else.\r\n        this.symbols.push(this.currentSymbol); \r\n\r\n        while (this.symbols.length > 0) {\r\n            const symbol = this.symbols.shift();\r\n\r\n            for (let i = this.symbols.length; i >= 0; --i) {\r\n                if (this.symbols[i] === symbol) {\r\n                    this.symbols.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (symbol.symbolType === MOVIE_SYMBOL_TYPE) {\r\n                symbol.cleanUp();\r\n            }\r\n\r\n            this.movie.removeChild(symbol);\r\n            this.game.flump.libraries[this.library].storeSymbol(symbol);\r\n        }\r\n\r\n        this.keyframeIdx = 0;\r\n        this.disabled = false;\r\n        this.data = undefined;\r\n        this.currentSymbol = undefined;\r\n    }\r\n}","import { KeyframeData } from \"../keyframe/KeyframeData\";\r\n\r\n/**\r\n * Layer information for a Movie symbol.\r\n * \r\n * @version 1.0\r\n */\r\nexport class LayerData {\r\n    /**\r\n     * @type {number}\r\n     * @readonly\r\n     * @version 1.0\r\n     */\r\n    get frameCount() {\r\n        if (this.keyframes.length === 0) {\r\n            return 0;\r\n        }\r\n        const keyframe = this.keyframes[this.keyframes.length - 1];\r\n        return keyframe.index + keyframe.duration;\r\n    }\r\n\r\n    constructor(library, movie, json) {\r\n        /**\r\n         * Library this layer data is from.\r\n         * @type {string}\r\n         * @version 1.0\r\n         */\r\n        this.library = library;\r\n\r\n        /**\r\n         * Movie this layer data is from.\r\n         * @type {string}\r\n         * @version 1.0\r\n         */\r\n        this.movie = movie;\r\n\r\n        // Verify the layer data has a name.\r\n        if (json.name === undefined) {\r\n            throw new Error(`Layer data from ${this.library}/${this.movie} is missing the name field.`);\r\n        }\r\n        /**\r\n         * @type {string}\r\n         * @version 1.0\r\n         */\r\n        this.name = json.name;\r\n\r\n        /**\r\n         * @type {boolean}\r\n         * @version 1.0\r\n         */\r\n        this.flipbook = json.flipbook || false; \r\n\r\n        // Verify the layer data has a keyframes list.\r\n        if (json.keyframes === undefined) {\r\n            throw new Error(`Layer data from ${this.library}/${this.movie} is missing the layframes field.`);\r\n        }\r\n        /**\r\n         * @type {Array.<KeyframeData>}\r\n         * @version 1.0\r\n         */\r\n        this.keyframes = json.keyframes.map(keyframe => new KeyframeData(keyframe));\r\n    }\r\n\r\n    /**\r\n     * Clean up this LayerData.\r\n     * @version 1.0\r\n     */\r\n    destroy() {\r\n        this.keyframes = undefined;\r\n    }\r\n\r\n    /**\r\n     * Returns the KeyframeData object for the given frame.\r\n     * @param {number} frame \r\n     * @version 1.0\r\n     */\r\n    getKeyframeData(frame) {\r\n        let i = 1;\r\n        for (; i < this.keyframes.length && this.keyframes[i].index <= frame; i++);\r\n        return this.keyframes[i - 1];\r\n    }\r\n}","import { Layer } from \"../layer/Layer\";\r\nimport { MovieData } from \"./MovieData\";\r\nimport { LayerData } from \"../layer/LayerData\";\r\nimport { \r\n    NO_FRAME, \r\n    PLAYING, \r\n    LAST_FRAME,\r\n    MOVIE_SYMBOL_TYPE,\r\n    STOPPED,\r\n    PLAYING_CHILDREN_ONLY\r\n} from \"../../constants/Constants\";\r\nimport { Symbol } from \"../Symbol\";\r\n\r\n/**\r\n * Flump movie symbol plays an animation from a library. A Movie symbol manages setting up and updating\r\n * multiple layers. Movie symbols can play or loop its animation. Additionally, if a Movie key is provided\r\n * to `Movie.playOnce()` or `Movie.loop()`, then the Movie symbol will switch to a new animation. Switching\r\n * animations will result in the old animation being stopped and all layers will be cleaned up and pooled\r\n * before the new animatino is setup and played. \r\n * \r\n * When an animation is switched  the `MovieData` object referenced by this Movie symbol will be overriden \r\n * and the movie specific fields will change to reflect the new animation.\r\n * \r\n * Movie symbols can be standalone or be nested within other Movies depending on the confirgation of animation \r\n * from the library. If a Movie symbol is nested, then it will be updated by its parent Movie. If using the\r\n * `Movie.playbackSpeed` property, then only apply it to the root Movie symbol.\r\n * \r\n * @extends Symbol\r\n * @version 1.0\r\n */\r\nexport class Movie extends Symbol {\r\n    /**\r\n     * @type {string}\r\n     * @readonly\r\n     * @version 1.0\r\n     */\r\n    get id() { return this.data.id; }\r\n    /**\r\n     * @type {string}\r\n     * @readonly\r\n     * @version 1.0\r\n     */\r\n    get library() { return this.data.library; }\r\n    /**\r\n     * @type {number}\r\n     * @readonly\r\n     * @version 1.0\r\n     */\r\n    get frameCount() { return this.data.frameCount; }\r\n    /**\r\n     * @type {Array.<Array.<string>>}\r\n     * @readonly\r\n     * @version 1.0\r\n     */\r\n    get labels() { return this.data.labels; }\r\n    /**\r\n     * @type {Array.<LayerData>}\r\n     * @readonly\r\n     * @version 1.0\r\n     */\r\n    get layerData() { return this.data.layers; }\r\n    /**\r\n     * @type {boolean}\r\n     * @readonly\r\n     * @version 1.0\r\n     */\r\n    get isFlipbook() { return this.data.isFlipbook; }\r\n    /**\r\n     * @type {boolean}\r\n     * @readonly\r\n     * @version 1.0\r\n     */\r\n    get isManagedByParent() { return this.parentMovie !== undefined; }\r\n    /**\r\n     * @type {boolean}\r\n     * @readonly\r\n     * @version 1.0\r\n     */\r\n    get isPlaying() { return this.state === PLAYING; }\r\n\r\n    constructor(game, frameRate) {\r\n        super(game);\r\n\r\n        /**\r\n         * @type {MovieData}\r\n         * @version 1.0\r\n         */\r\n        this.data = undefined;\r\n\r\n        /**\r\n         * @type {number}\r\n         * @version 1.0\r\n         */\r\n        this.frameRate = frameRate;\r\n\r\n        /**\r\n         * @type {number}\r\n         * @version 1.0\r\n         */\r\n        this.duration = 0;\r\n\r\n        /**\r\n         * @type {Array.<Layer>}\r\n         * @version 1.0\r\n         */\r\n        this.layers = [];\r\n\r\n        /**\r\n         * Pool of unused layers.\r\n         * @type {Array.<Layer>}\r\n         * @version 1.0\r\n         */\r\n        this.layerPool = [];\r\n\r\n        /**\r\n         * @type {Movie}\r\n         * @version 1.0\r\n         */\r\n        this.parentMovie = undefined;\r\n\r\n        /**\r\n         * @type {number}\r\n         * @version 1.0\r\n         */\r\n        this.framePosition = NO_FRAME;\r\n\r\n        /**\r\n         * @type {number}\r\n         * @version 1.0\r\n         */\r\n        this.stopFrame = NO_FRAME;\r\n\r\n        /**\r\n         * @type {number}\r\n         * @version 1.0\r\n         */\r\n        this.pendingGoToFrame = NO_FRAME;\r\n\r\n        /**\r\n         * @type {number}\r\n         * @version 1.0\r\n         */\r\n        this.lastFrameIdx = NO_FRAME;\r\n\r\n        /**\r\n         * @type {number}\r\n         * @version 1.0\r\n         */\r\n        this.playTime = 0;\r\n\r\n        /**\r\n         * @type {boolean}\r\n         * @version 1.0\r\n         */\r\n        this.skipAdvanceTime = false;\r\n\r\n        /**\r\n         * @type {boolean}\r\n         * @version 1.0\r\n         */\r\n        this.isUpdatingFrame = false;\r\n\r\n        /**\r\n         * @type {string}\r\n         * @version 1.0\r\n         */\r\n        this.fallbackLoop = undefined;\r\n\r\n        /**\r\n         * @type {number}\r\n         * @version 1.0\r\n         */\r\n        this.playbackSpeed = 1;\r\n\r\n        /**\r\n         * @type {string}\r\n         * @version 1.0\r\n         */\r\n        this.state = PLAYING\r\n\r\n        /**\r\n         * @type {Phaser.Signal}\r\n         * @version 1.0\r\n         */\r\n        this.labelEvents = new Phaser.Signal();\r\n\r\n        /**\r\n         * @type {Phaser.Signal}\r\n         * @version 1.0\r\n         */\r\n        this.playbackComplete = new Phaser.Signal();\r\n\r\n        /**\r\n         * @type {Phaser.Signal}\r\n         * @version 1.0\r\n         */\r\n        this.playbackLoop = new Phaser.Signal();\r\n    }\r\n\r\n    /**\r\n     * Destroys the Movie and all it's layers and symbols.\r\n     * @version 1.0\r\n     */\r\n    destroy() {\r\n        this.labelEvents.dispose();\r\n        this.labelEvents = undefined;\r\n\r\n        this.layers.forEach(layer => layer.destroy());\r\n        this.layers = undefined;\r\n\r\n        this.layerPool.forEach(layer => layer.destroy());\r\n        this.layerPool = undefined;\r\n\r\n        this.data = undefined;\r\n        this.parentMovie = undefined;\r\n\r\n        super.destroy();\r\n    }\r\n\r\n    /**\r\n     * Updates the Movie if it is not managed by a parent Movie symbol.\r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    update() {\r\n        if (!this.isManagedByParent) {\r\n            this.advanceTime((this.game.time.elapsedMS * 0.001) * this.playbackSpeed);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Changes the animation this Movie is playing.\r\n     * @param {string} key \r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    switchMovieTo(key) {\r\n        if (this.game.flump.libraries[this.library].hasMovieSymbol(key)) {\r\n            this.setup(this.game.flump.libraries[this.library].getMovieData(key));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if the label exists in on this Movie.\r\n     * @param {string} label \r\n     * @version 1.0\r\n     */\r\n    hasLabel(label) {\r\n        return this.getFrameOfLabel(label);\r\n    }\r\n\r\n    /**\r\n     * Returns the frame the label is on.\r\n     * @param {string} label \r\n     * @version 1.0\r\n     */\r\n    getFrameOfLabel(label) {\r\n        for (let i = 0; i < this.labels.length; i++) {\r\n            if (this.labels[i].indexOf(label) >= 0) {\r\n                return i;\r\n            }\r\n        }\r\n        return NO_FRAME;\r\n    }\r\n\r\n    /**\r\n     * Loop this movie.\r\n     * @version 1.0\r\n     */\r\n    loop(key, restart = true) {\r\n        this.fallbackLoop = undefined;\r\n\r\n        if ((!key || key === this.id) && restart) {\r\n            this.goToInternal(0, true);\r\n        }\r\n        else if (key && key !== this.id) {\r\n            this.switchMovieTo(key);\r\n        }\r\n\r\n        this.state = PLAYING;\r\n        this.stopFrame = NO_FRAME;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Plays the Movie to the last frame once.\r\n     * @version 1.0\r\n     */\r\n    playOnce(key, restart = true, fallbackLoop = undefined) {\r\n        this.fallbackLoop = fallbackLoop;\r\n\r\n        if ((!key || key === this.id) && restart) {\r\n            this.goToInternal(0, true);\r\n        }\r\n        else if (key && key !== this.id) {\r\n            this.switchMovieTo(key);\r\n        }\r\n\r\n        return this.playTo(LAST_FRAME);\r\n    }\r\n\r\n    /**\r\n     * Plays the movie to the provided frame number or label.\r\n     * @param {string | number} frame Frame number or frame label to play to.\r\n     * @version 1.0\r\n     */\r\n    playTo(frame) {\r\n        return this.stopAt(frame).play();\r\n    }\r\n\r\n    /**\r\n     * Plays the current Movie.\r\n     * @version 1.0\r\n     */\r\n    play() {\r\n        this.state = this.framePosition !== this.stopFrame ? PLAYING : STOPPED;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Plays only nested Movies.\r\n     * @version 1.0\r\n     */\r\n    playChildrenOnly() {\r\n        this.state = PLAYING_CHILDREN_ONLY;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Tells the Movie to stop at a specific frame.\r\n     * @param {string | number} frame \r\n     * @version 1.0\r\n     */\r\n    stopAt(frame) {\r\n        this.stopFrame = this.getFrame(frame);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Stops the current Movie.\r\n     * @version 1.0\r\n     */\r\n    stop() {\r\n        this.state = STOPPED;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Go to a specific frame number or label. This go to does not atler the playing state of \r\n     * the movie. Any labels on the target frame will be fired.\r\n     * @param {string | number} frame Frame number or label to go to.\r\n     * @version 1.0\r\n     */\r\n    goTo(frame) {\r\n        return this.goToInternal(this.getFrame(frame), false);\r\n    }\r\n\r\n    /**\r\n     * Same as Movie.goTo, however this will also advance nested Movie objects to the specified frame.\r\n     * If the frame does no exist on a child Movie, then that Movie is advanced to its last frame.\r\n     * @param {number} frame \r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    recursiveGoTo(frame) {\r\n        return this.goToInternal(this.getFrame(frame), true);\r\n    }\r\n\r\n    /**\r\n     * GoTo function used internally to the Movie. It's suggested to use Movie.goTo() or Movie.recursiveGoTo() instead.\r\n     * @param {string | number} frame \r\n     * @param {boolean} recursive \r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    goToInternal(frame, recursive) {\r\n        if (this.isUpdatingFrame) {\r\n            this.pendingGoToFrame = frame;\r\n            return this;\r\n        }\r\n        \r\n        let nextFrame = frame;\r\n        if (nextFrame >= this.frameCount) {\r\n            nextFrame = this.frameCount;\r\n        }\r\n\r\n        this.playTime = nextFrame / this.frameRate;\r\n        this.updateFrame(nextFrame, 0);\r\n\r\n        if (recursive) {\r\n            this.layers.forEach(layer => {\r\n                if (layer.currentSymbol.symbolType === MOVIE_SYMBOL_TYPE) {\r\n                    layer.currentSymbol.goToInternal(frame, recursive);\r\n                }\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Internal function to get the specified frame\r\n     * @param {string | number} frame \r\n     * @version 1.0\r\n     */\r\n    getFrame(frame) {\r\n        if (typeof frame === \"number\") {\r\n            return frame;\r\n        }\r\n        else if (typeof frame ===\"string\") {\r\n            frame = this.getFrameOfLabel(frame);\r\n            if (frame < 0) {\r\n                throw new Error(`Movie does not contain a frame label ${frame}.`);\r\n            }\r\n            return frame;\r\n        }\r\n        throw new Error(\"Frame must be a string or number\");\r\n    }\r\n\r\n    /**\r\n     * Toggle a specific layer on the Movie. \r\n     * @param {string} name \r\n     * @param {boolean} toggle \r\n     * @returns {Symbol | Movie} Returns the current layer sumbol.\r\n     * @version 1.0\r\n     */\r\n    toggleLayer(name, toggle) {\r\n        for (let i = 0; i < this.layers.length; i++) {\r\n            if (this.layers[i].name === name) {\r\n                this.layers[i].disabled = !toggle;\r\n                return this.layers[i].currentSymbol;\r\n            }\r\n        }\r\n        throw new Error(`Cannot find layer ${name} in Movie ${this.id}.`);\r\n    }\r\n\r\n    /**\r\n     * Checks to see if the provided layer is enabled.\r\n     * @param {string} name \r\n     * @version 1.0\r\n     */\r\n    isLayerEnabled(name) {\r\n        for (let i = 0; i < this.layers.length; i++) {\r\n            if (this.layers[i].name === name) {\r\n                this.layers[i].disabled = !toggle;\r\n                return !this.layers[i].disabled;\r\n            }\r\n        }\r\n        throw new Error(`Cannot find layer ${name} in Movie ${this.id}.`);\r\n    }\r\n\r\n    /**\r\n     * Removes a child at the provided index. If the child is managed by one of the Layers of this Movie,\r\n     * and if the Layer contains no other symbols, then the entire Layer will be removed from the Movie.\r\n     * @param {number} index \r\n     * @version 1.0\r\n     */\r\n    removeChildAt(index) {\r\n        if (this.isUpdatingFrame) {\r\n            throw new Error(`Cannot remove a layer while the Movie is updating its frame.`);\r\n        }\r\n\r\n        if (index < 0) {\r\n            index = this.children.length - index;\r\n        }\r\n\r\n        const child = super.getChildAt(index);\r\n        let childLayerIndex = -1;\r\n\r\n        if (this.layers) {\r\n            if (index < this.layers.length && this.layers[index].currentSymbol === child) {\r\n                childLayerIndex = index;\r\n            }\r\n            else {\r\n                for (let i = 0; i < this.layers.length; ++i) {\r\n                    if (this.layers[i].currentSymbol === child) {\r\n                        childLayerIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let replaceSymbol = false;\r\n        if (childLayerIndex >= 0) {\r\n            if (child.symbolType === MOVIE_SYMBOL_TYPE) {\r\n                // Clear the nested Movie's parent reference.\r\n                child.setParentMovie();\r\n            }\r\n\r\n            if (this.layers[childLayerIndex].symbolCount === 1) {\r\n                this.layers.splice(childLayerIndex, 1);\r\n            }\r\n            else {\r\n                replaceSymbol = true;\r\n            }\r\n        }\r\n\r\n        super.removeChildAt(index);\r\n\r\n        if (replaceSymbol) {\r\n            const replacement = this.game.flump.createSymbolFrom(this.library);\r\n            this.addChildAt(replacement, index);\r\n            this.layers[childLayerIndex].replaceCurrentSymbol(replacement);\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Get the names of each Movie Layer.\r\n     * @version 1.0\r\n     */\r\n    getLayerNames() {\r\n        return this.layers.map(layer => layer.name);\r\n    }\r\n\r\n    /**\r\n     * Cleans up the Movie.\r\n     * This does not destroy the movie, simply returns all layers and symbols back to their pools.\r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    cleanUp() {\r\n        while (this.layers.length > 0) {\r\n            const layer = this.layers.shift();\r\n            layer.cleanUp();\r\n            this.layerPool.push(layer);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets reference to the parent Movie. This is for Movies that are nested.\r\n     * @param {Movie} parent \r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    setParentMovie(parent) {\r\n        this.parentMovie = parent;\r\n    }\r\n\r\n    /**\r\n     * Sets the initial state of the Movie.\r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    addedToLayer() {\r\n        this.goTo(0);\r\n        this.skipAdvanceTime = true;\r\n    }\r\n\r\n    /**\r\n     * Setups up this movie to use the provided MovieData.\r\n     * @param {MovieData} data \r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    setup(data) {\r\n        if (this.data !== undefined) {\r\n            this.cleanUp();\r\n        }\r\n\r\n        this.data = data;\r\n        this.duration = this.frameCount / this.frameRate;\r\n        \r\n        if (this.isFlipbook) {\r\n            this.layers = [this.getFreeLayer().setup(this.layerData[0])];\r\n        }\r\n        else {\r\n            for (let i = 0; i < this.layerData.length; i++) {\r\n                this.layers.push(this.getFreeLayer().setup(this.layerData[i]));\r\n            }\r\n        }\r\n        return this.goToInternal(0, true);\r\n    }\r\n\r\n    /**\r\n     * Advances the animation along its timeline.\r\n     * @param {number} dt Delta time\r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    advanceTime(dt) {\r\n        if (dt < 0) {\r\n            throw new Error(`Invalid time ${dt}`);\r\n        }\r\n\r\n        if (this.skipAdvanceTime) {\r\n            this.skipAdvanceTime = false;\r\n            return;\r\n        }\r\n\r\n        if (this.state === STOPPED) {\r\n            return;\r\n        }\r\n\r\n        if (this.state === PLAYING && this.frameCount > 1) {\r\n            this.playTime += dt;\r\n\r\n            const actualPlayTime = this.playTime;\r\n            if (this.playTime >= this.duration) {\r\n                this.playTime %= this.duration;\r\n            }\r\n\r\n            // Originally Math.round(this.playTime * this.frameRate)\r\n            // Removed rounding for smoother motion. Keeping this note in case\r\n            // problems pop up down the road.\r\n            let nextFrame = this.playTime * this.frameRate; \r\n            if (nextFrame < 0) {\r\n                nextFrame = 0;\r\n            }\r\n            else if (nextFrame >= this.frameCount) {\r\n                nextFrame = this.frameCount - 1;\r\n            }\r\n\r\n            if (this.stopFrame !== NO_FRAME) {\r\n                const framesRemaining = this.framePosition <= this.stopFrame ? this.stopFrame - this.framePosition : this.frameCount - this.framePosition + this.stopFrame;\r\n                // Originally Math.round(actualPlayTime * this.frameRate)\r\n                // Removed rounding for smoother motion. Keeping this note in case\r\n                // problems pop up down the road.\r\n                const framesElapsed = (actualPlayTime * this.frameRate) - this.framePosition;\r\n                \r\n                if (framesElapsed >= framesRemaining) {\r\n                    this.state = STOPPED;\r\n                    nextFrame = this.stopFrame;\r\n                }\r\n            }\r\n\r\n            this.updateFrame(nextFrame, dt);\r\n        }\r\n\r\n        for (let i = 0; i < this.layers.length; i++) {\r\n            if (this.layers[i].currentSymbol.symbolType === MOVIE_SYMBOL_TYPE) {\r\n                this.layers[i].currentSymbol.advanceTime(dt);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates each layer to the next frame and fires any label events.\r\n     * @param {number} nextFrame \r\n     * @param {number} dt\r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    updateFrame(nextFrame, dt) {\r\n        if (nextFrame < 0 || nextFrame >= this.frameCount) {\r\n            throw new Error(`Invalid frame ${nextFrame}.`);\r\n        }\r\n\r\n        if (this.isUpdatingFrame) {\r\n            throw new Error(\"Movie.updateFrame() is being called recursively\");\r\n        }\r\n\r\n        this.pendingGoToFrame = NO_FRAME;\r\n        this.isUpdatingFrame = true;\r\n\r\n        const lastFrame = this.framePosition;\r\n        this.framePosition = nextFrame;\r\n\r\n        let startFrame, count;\r\n\r\n        if (dt <= 0) {\r\n            startFrame = nextFrame;\r\n            count = 1;\r\n        }\r\n        else {\r\n            startFrame = lastFrame + 1 < this.frameCount ? lastFrame + 1 : 0;\r\n            count = this.framePosition - lastFrame;\r\n\r\n            if (dt >= this.duration || nextFrame < this.framePosition) {\r\n                count += this.frameCount;\r\n            }\r\n        }\r\n\r\n        const num = startFrame | 0;\r\n        if (this.lastFrameIdx !== num) {\r\n            this.lastFrameIdx = num;\r\n\r\n            let frameIndex = this.lastFrameIdx;\r\n            for (let i = 0; i < count; ++i) {\r\n                if (this.pendingGoToFrame !== NO_FRAME) {\r\n                    break;\r\n                }\r\n    \r\n                // Fire frame label events.\r\n                if (this.labels[frameIndex] !== undefined) {\r\n                    for (let j = 0; j < this.labels[frameIndex].length; j++) {\r\n                        this.labelEvents.dispatch(this.labels[frameIndex][j]);\r\n                        if (this.pendingGoToFrame !== NO_FRAME) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n    \r\n                // Avoid modulo division.\r\n                if (++frameIndex === this.frameCount) {\r\n                    frameIndex = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.isUpdatingFrame = false;\r\n\r\n        if (this.pendingGoToFrame !== NO_FRAME) {\r\n            const pending = this.pendingGoToFrame;\r\n            this.pendingGoToFrame = NO_FRAME;\r\n\r\n            this.goTo(pending);\r\n        }\r\n        else if (nextFrame !== lastFrame) {\r\n            for (let i = 0; i < this.layers.length; i++) {\r\n                this.layers[i].drawFrame(nextFrame);\r\n            }\r\n        }\r\n\r\n        if (!this.isManagedByParent) {\r\n            if (this.framePosition === this.stopFrame) {\r\n                if (this.fallbackLoop !== undefined) {\r\n                    this.loop(this.fallbackLoop);\r\n                }\r\n                this.playbackComplete.dispatch();\r\n            }\r\n            else if (this.framePosition < lastFrame) {\r\n                this.playbackLoop.dispatch();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a layer not currently being used in an animation.\r\n     * @returns {Layer}\r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    getFreeLayer() {\r\n        if (this.layerPool.length > 0) {\r\n            return this.layerPool.shift();\r\n        }\r\n        return new Layer(this);\r\n    }\r\n\r\n    /**\r\n     * Restores the Movie symbol to its default state.\r\n     * @internal\r\n     * @version 1.0\r\n     */\r\n    restore() {\r\n        this.parentMovie = undefined;\r\n        this.framePosition = NO_FRAME;\r\n        this.stopFrame = NO_FRAME;\r\n        this.pendingGoToFrame = NO_FRAME;\r\n        this.lastFrameIdx = NO_FRAME;\r\n        this.playTime = 0;\r\n        this.skipAdvanceTime = false;\r\n        this.isUpdatingFrame = false;\r\n        this.fallbackLoop = undefined;\r\n        this.playbackSpeed = 1;\r\n        this.state = PLAYING\r\n        this.labelEvents.removeAll();\r\n        this.playbackComplete.removeAll();\r\n        this.playbackLoop.removeAll();\r\n\r\n        return super.restore();\r\n    }\r\n}","import { LayerData } from \"../layer/LayerData\";\r\nimport { \r\n    FIRST_FRAME, \r\n    LAST_FRAME, \r\n    EMPTY_LABEL \r\n} from \"../../constants/Constants\";\r\n\r\n/**\r\n * Movie information for a Movie symbol.\r\n * \r\n * @version 1.0\r\n */\r\nexport class MovieData {\r\n    /**\r\n     * @type {boolean}\r\n     * @version 1.0\r\n     */\r\n    get isFlipbook() { return this.layers.length > 0 && this.layers[0].flipbook; }\r\n\r\n    constructor(library, json) {\r\n        /**\r\n         * Reference to which library this movie data is from.\r\n         * @type {string}\r\n         * @version 1.0\r\n         */\r\n        this.library = library;\r\n\r\n        /**\r\n         * @type {string}\r\n         * @version 1.0\r\n         */\r\n        this.id = json.id;\r\n\r\n        // Verify the movie data has a list of layers.\r\n        if (json.layers === undefined) {\r\n            throw new Error(`Movie data ${this.id} is missing the layers field.`);\r\n        }\r\n\r\n        /**\r\n         * @type {Array.<LayerData>}\r\n         * @version 1.0\r\n         */\r\n        this.layers = json.layers.map(layer=> new LayerData(library, this.id, layer));\r\n\r\n        /**\r\n         * @type {number}\r\n         * @version 1.0\r\n         */\r\n        this.frameCount = 0;\r\n\r\n        // Get the larger frame count from the list of layers.\r\n        this.layers.forEach(layer => this.frameCount = Math.max(this.frameCount, layer.frameCount));\r\n\r\n        /**\r\n         * @type {Array.<Array.<string>>}\r\n         * @version 1.0\r\n         */\r\n        this.labels = Array(this.frameCount).fill().map(i => []);\r\n\r\n        // Generate the lists of frame labels from each keyframe within the list of layers.\r\n        this.generateFrameLabels();\r\n    }\r\n\r\n    /**\r\n     * Clean up this MovieData.\r\n     * @version 1.0\r\n     */\r\n    destroy() {\r\n        this.layers.forEach(layer => layer.destroy());\r\n        this.layers = undefined;\r\n        this.labels = undefined;\r\n    }\r\n\r\n    /**\r\n     * Generate the lists of frame labels from each keyframe within the list of layers.\r\n     * @version 1.0\r\n     */\r\n    generateFrameLabels() {\r\n        if (this.labels.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // Add the first and last frame labels.\r\n        this.labels[0].push(FIRST_FRAME);\r\n        this.labels[this.frameCount - 1].push(LAST_FRAME);\r\n\r\n        // Add additional frame labels from each keyframe on the list of layers.\r\n        this.layers.forEach(layer => {\r\n            layer.keyframes.forEach(keyframe => {\r\n                if (keyframe.label !== EMPTY_LABEL) {\r\n                    this.labels[keyframe.index].push(keyframe.label);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}"],"sourceRoot":""}